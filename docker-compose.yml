#version: '3.8'

services:
  migrations:
    command: npx prisma migrate deploy
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nest-api-migrations
    restart: on-failure:3
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_OPTIONS: --max-old-space-size=512
      npm_config_maxsockets: 5
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/common_db?schema=public

  nest-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nest-api
    restart: always
    ports:
      - 8000:5000
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    environment:
      NODE_OPTIONS: --max-old-space-size=512
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/common_db?schema=public

  postgres:
    image: postgres
    restart: on-failure
    env_file:
      - .env
    ports:
      - 5433:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: common_db
    user: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d common_db -U postgres"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s

  nginx:
    container_name: proxy_nginx
    image: nginx:latest
    ports:
      - '80:80'
      - '5050:5050'
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./static:/var/www/static
    restart: always

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    ports:
      - '8080:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: alex@mrk.digital
      PGADMIN_DEFAULT_PASSWORD: qwertyuiop
    restart: always

volumes:
  postgres-data:
